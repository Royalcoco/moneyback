const Simplocash = artifacts.require("Simplocash");

module.exports = function(deployer) {
  // Initial supply of 1 million Simplocash tokens
  deployer.deploy(Simplocash, 1000000 * 10**18);
};
module.exports = {
  networks: {
    development: {
      host: "127.0.0.1",
      port: 8545,
      network_id: "*" // Match any network id
    },
    rinkeby: {
      provider: () => new HDWalletProvider(mnemonic, `https://rinkeby.infura.io/v3/YOUR_INFURA_PROJECT_ID`),
      network_id: 4,       // Rinkeby's id
      gas: 4500000,        // Rinkeby has a lower block limit than mainnet
      gasPrice: 10000000000
    }
  },
  compilers: {
    solc: {
      version: "0.8.0"    // Fetch exact version from solc-bin (default: truffle's version)
    }
  }
};
// 2_deploy_contracts.js
const Simplocash = artifacts.require("Simplocash");

module.exports = function(deployer) {
  // Initial supply of 1 million Simplocash tokens
  deployer.deploy(Simplocash, 1000000 * 10**18);
};
// truffle-config.js
const HDWalletProvider = require('@truffle/hdwallet-provider');
const mnemonic = "YOUR_MNEMONIC_HERE";

module.exports = {
  networks: {
    development: {
      host: "127.0.0.1",
      port: 8545,
      network_id: "*" // Match any network id
    },
    rinkeby: {
      provider: () => new HDWalletProvider(mnemonic, `https://rinkeby.infura.io/v3/YOUR_INFURA_PROJECT_ID`),
      network_id: 4,       // Rinkeby's id
      gas: 4500000,        // Rinkeby has a lower block limit than mainnet
      gasPrice: 10000000000
    }
  },
  compilers: {
    solc: {
      version: "0.8.0"    // Fetch exact version from solc-bin (default: truffle's version)
    }
  }
};
