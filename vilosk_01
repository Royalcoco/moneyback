from flask import Flask, request, jsonify
from models import db, User, Account, Transaction
from werkzeug.security import generate_password_hash, check_password_hash

app = Flask(__name__)
app.config['SQLALCHEMY_DATABASE_URI'] = 'sqlite:///app.db'
db.init_app(app)

@app.route('/register', methods=['POST'])
def register():
    data = request.get_json()
    hashed_password = generate_password_hash(data['password'], method='sha256')
    new_user = User(username=data['username'], email=data['email'], password=hashed_password)
    db.session.add(new_user)
    db.session.commit()
    return jsonify({'message': 'User registered successfully'})

@app.route('/login', methods=['POST'])
def login():
    data = request.get_json()
    user = User.query.filter_by(email=data['email']).first()
    if not user or not check_password_hash(user.password, data['password']):
        return jsonify({'message': 'Login failed'})
    return jsonify({'message': 'Login successful'})

@app.route('/account', methods=['POST'])
def create_account():
    data = request.get_json()
    user = User.query.filter_by(id=data['user_id']).first()
    if not user:
        return jsonify({'message': 'User not found'})
    new_account = Account(user_id=user.id, balance=data.get('balance', 0.0))
    db.session.add(new_account)
    db.session.commit()
    return jsonify({'message': 'Account created successfully'})

@app.route('/transaction', methods=['POST'])
def create_transaction():
    data = request.get_json()
    account = Account.query.filter_by(id=data['account_id']).first()
    if not account:
        return jsonify({'message': 'Account not found'})
    new_transaction = Transaction(account_id=account.id, amount=data['amount'])
    account.balance += data['amount']
    db.session.add(new_transaction)
    db.session.commit()
    return jsonify({'message': 'Transaction successful', 'new_balance': account.balance})

if __name__ == '__main__':
    app.run(debug=True)
